{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/karenrogers/personal-projects/NextJS/nextjs-meetups/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/karenrogers/personal-projects/NextJS/nextjs-meetups/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/karenrogers/personal-projects/NextJS/nextjs-meetups/pages/new-meetup/index.js\",\n    _this = this;\n\nimport { useRouter } from 'next/router'; //www.our-domain.com/new-meetup\n\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nvar addMeetupHandler = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n    var router, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            router = useRouter(); // console.log(enteredMeetupData);\n            //seding req. to api route (/especial api folder/folder name inside api folder). this sends the req. to new-meetup and trigger the handler function\n\n            _context.next = 4;\n            return fetch('/api/new-meetup', {\n              //configure the req.\n              method: 'POST',\n              //data attached to this rq. has to be an {} which enteredMeetupData already is\n              body: JSON.stringify(enteredMeetupData),\n              headers: {\n                'content-type': 'application/json'\n              }\n            });\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            //   console.log('data from addMeetupHandler new-meetup api', data);\n            ru;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function addMeetupHandler(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar NewMeetupPage = function NewMeetupPage() {\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = NewMeetupPage;\nexport default NewMeetupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetupPage\");","map":{"version":3,"sources":["/Users/karenrogers/personal-projects/NextJS/nextjs-meetups/pages/new-meetup/index.js"],"names":["useRouter","NewMeetupForm","addMeetupHandler","enteredMeetupData","router","fetch","method","body","JSON","stringify","headers","response","json","data","ru","NewMeetupPage"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B,C,CACA;;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,IAAMC,gBAAgB;AAAA;;AAAA,yEAAG,iBAAOC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACjBC,YAAAA,MADiB,GACRJ,SAAS,EADD,EAEvB;AACA;;AAHuB;AAAA,mBAIAK,KAAK,CAAC,iBAAD,EAAoB;AAC9C;AACAC,cAAAA,MAAM,EAAE,MAFsC;AAG9C;AACAC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,iBAAf,CAJwC;AAK9CO,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AALqC,aAApB,CAJL;;AAAA;AAIjBC,YAAAA,QAJiB;AAAA;AAAA,mBAaJA,QAAQ,CAACC,IAAT,EAbI;;AAAA;AAajBC,YAAAA,IAbiB;AAcvB;AACAC,YAAAA,EAAE;;AAfqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YACLd,SADK;AAAA;;AAAA,kBAAhBE,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAkBA,IAAMa,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEb;AAA5B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;KAAMa,a;AAIN,eAAeA,aAAf","sourcesContent":["import { useRouter } from 'next/router';\n//www.our-domain.com/new-meetup\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\n\nconst addMeetupHandler = async (enteredMeetupData) => {\n  const router = useRouter();\n  // console.log(enteredMeetupData);\n  //seding req. to api route (/especial api folder/folder name inside api folder). this sends the req. to new-meetup and trigger the handler function\n  const response = await fetch('/api/new-meetup', {\n    //configure the req.\n    method: 'POST',\n    //data attached to this rq. has to be an {} which enteredMeetupData already is\n    body: JSON.stringify(enteredMeetupData),\n    headers: {\n      'content-type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  //   console.log('data from addMeetupHandler new-meetup api', data);\n  ru\n};\n\nconst NewMeetupPage = () => {\n  return <NewMeetupForm onAddMeetup={addMeetupHandler} />;\n};\n\nexport default NewMeetupPage;\n"]},"metadata":{},"sourceType":"module"}