{"ast":null,"code":"//import MongoClient to connect to our data base in MongoDB and fetch data\nimport { MongoClient } from 'mongodb'; //we define function that contain server-side code. this only runs on the server. The file name acts as url paths\n//endpoint for creating a new meetup: Nextjs will convert this into endopints on the server-side\n//this function receives the request and response object\n\nconst handler = async (req, res) => {\n  //SENDING THE REQ\n  if (req.method === 'POST') {\n    const data = req.body; //data we expect to get from the incoming req body\n    // const { title, image, address, description } = data;\n    //MongoClient.connect returns a promise and we can use await. the string inside the connect method is from MongoDB\n\n    const client = await MongoClient.connect('mongodb+srv://Karen:Antofagasta2200286@cluster0.yyz3a.mongodb.net/meetups?retryWrites=true&w=majority'); //get access to the DB by calling the db method on the client\n\n    const dataBase = client.db(); //this is a NSQL db (collection is a group of docs, docs being each meetup in this case)\n    //access a certain collection by calling the collection method on the database.\n    //give your collection a name 'meetups' it can be the same you added in the connect string as your database\n\n    const meetupsCollection = dataBase.collection('meetups'); //adding a new doc (will be an {}) into this collection. we can pass the data variable we created that holds title, image, address and description\n    //this operation also returns a promise, so we can use await here\n\n    const result = await meetupsCollection.insertOne(data);\n    console.log('result', result); //closing the DB connection once we're done\n\n    client.close(); //SENDING THE RES\n    //setting an http status code with a json message in case something was inserted successfully\n\n    res.status(201).json({\n      message: 'Meetup was inserted'\n    });\n  }\n};\n\nexport default handler;","map":{"version":3,"sources":["/Users/karenrogers/personal-projects/NextJS/nextjs-meetups/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","dataBase","db","meetupsCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B,C,CAEA;AAEA;AACA;;AACA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC;AACA,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CADyB,CAEzB;AACA;AAEA;;AACA,UAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,uGADmB,CAArB,CANyB,CAUzB;;AACA,UAAMC,QAAQ,GAAGF,MAAM,CAACG,EAAP,EAAjB,CAXyB,CAazB;AACA;AACA;;AACA,UAAMC,iBAAiB,GAAGF,QAAQ,CAACG,UAAT,CAAoB,SAApB,CAA1B,CAhByB,CAiBzB;AAEA;;AACA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BT,IAA5B,CAArB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB,EArByB,CAuBzB;;AACAN,IAAAA,MAAM,CAACU,KAAP,GAxByB,CA0BzB;AACA;;AACAd,IAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF,CAhCD;;AAkCA,eAAenB,OAAf","sourcesContent":["//import MongoClient to connect to our data base in MongoDB and fetch data\nimport { MongoClient } from 'mongodb';\n\n//we define function that contain server-side code. this only runs on the server. The file name acts as url paths\n\n//endpoint for creating a new meetup: Nextjs will convert this into endopints on the server-side\n//this function receives the request and response object\nconst handler = async (req, res) => {\n  //SENDING THE REQ\n  if (req.method === 'POST') {\n    const data = req.body;\n    //data we expect to get from the incoming req body\n    // const { title, image, address, description } = data;\n\n    //MongoClient.connect returns a promise and we can use await. the string inside the connect method is from MongoDB\n    const client = await MongoClient.connect(\n      'mongodb+srv://Karen:Antofagasta2200286@cluster0.yyz3a.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n\n    //get access to the DB by calling the db method on the client\n    const dataBase = client.db();\n\n    //this is a NSQL db (collection is a group of docs, docs being each meetup in this case)\n    //access a certain collection by calling the collection method on the database.\n    //give your collection a name 'meetups' it can be the same you added in the connect string as your database\n    const meetupsCollection = dataBase.collection('meetups');\n    //adding a new doc (will be an {}) into this collection. we can pass the data variable we created that holds title, image, address and description\n\n    //this operation also returns a promise, so we can use await here\n    const result = await meetupsCollection.insertOne(data);\n    console.log('result', result);\n\n    //closing the DB connection once we're done\n    client.close();\n\n    //SENDING THE RES\n    //setting an http status code with a json message in case something was inserted successfully\n    res.status(201).json({ message: 'Meetup was inserted' });\n  }\n};\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}